x-django-env: &django-env
  DEBUG: "1"
  SECRET_KEY: "dev-secret-change-me"
  ALLOWED_HOSTS: "localhost,127.0.0.1,web"
  TIME_ZONE: "Europe/Berlin"

  DATABASE_URL: "postgres://teleuser:telepass@db:5432/telemanager"

  CELERY_BROKER_URL: "redis://redis:6379/0"
  CELERY_RESULT_BACKEND: "redis://redis:6379/1"

  CORS_ALLOWED_ORIGINS: "http://localhost:5173,http://localhost:3000"
  CSRF_TRUSTED_ORIGINS: "http://localhost:5173,http://localhost:3000"


services:
  web:
    build:
      context: .                 # контекст: корень репозитория
      dockerfile: backend/Dockerfile
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    environment: *django-env
    ports:
      - "8000:8000"
    depends_on: [db, redis]

  celery_worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A telemanager_django worker -l info
    volumes:
      - .:/app
    environment: *django-env
    depends_on: [db, redis]

  celery_beat:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A telemanager_django beat -l info
    volumes:
      - .:/app
    environment: *django-env
    depends_on: [db, redis]

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: telemanager
      POSTGRES_USER: teleuser
      POSTGRES_PASSWORD: telepass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run start -- --host
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    environment:
      - NODE_ENV=development
    ports:
      - "5173:5173"
      - "3000:3000"

volumes:
  pgdata:
  redisdata:
